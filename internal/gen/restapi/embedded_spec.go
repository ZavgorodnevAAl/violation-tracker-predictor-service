// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "swagger": "2.0",
  "info": {
    "description": "обработчик схематики для предсказания нарушения",
    "title": "predictor-service",
    "version": "0.1.1"
  },
  "basePath": "/",
  "paths": {
    "/info": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "predictor_tag"
        ],
        "summary": "Запрос на получение информации о предикторе по токену",
        "operationId": "info___get",
        "parameters": [
          {
            "type": "integer",
            "format": "uint64",
            "description": "токен",
            "name": "token",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Возвращаемые ответы",
            "schema": {
              "$ref": "#/definitions/info_200"
            }
          },
          "500": {
            "description": "Ошибка сервера",
            "schema": {
              "$ref": "#/definitions/error_500"
            }
          }
        }
      }
    },
    "/upload": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "predictor_tag"
        ],
        "summary": "Запрос на загрузку видоса",
        "operationId": "upload___post",
        "parameters": [
          {
            "description": "body",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "video_base64": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Возвращаемые ответы",
            "schema": {
              "type": "object",
              "properties": {
                "token": {
                  "type": "integer",
                  "format": "uint64"
                }
              }
            }
          },
          "500": {
            "description": "Ошибка сервера",
            "schema": {
              "$ref": "#/definitions/error_500"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "error_500": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string"
        }
      }
    },
    "info_200": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "uint64"
        },
        "out": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int"
          }
        },
        "persent": {
          "type": "number",
          "format": "float64"
        }
      }
    }
  },
  "tags": [
    {
      "description": "тег для запросов завязанных на предсказании",
      "name": "predictor_tag"
    }
  ]
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "swagger": "2.0",
  "info": {
    "description": "обработчик схематики для предсказания нарушения",
    "title": "predictor-service",
    "version": "0.1.1"
  },
  "basePath": "/",
  "paths": {
    "/info": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "predictor_tag"
        ],
        "summary": "Запрос на получение информации о предикторе по токену",
        "operationId": "info___get",
        "parameters": [
          {
            "type": "integer",
            "format": "uint64",
            "description": "токен",
            "name": "token",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Возвращаемые ответы",
            "schema": {
              "$ref": "#/definitions/info_200"
            }
          },
          "500": {
            "description": "Ошибка сервера",
            "schema": {
              "$ref": "#/definitions/error_500"
            }
          }
        }
      }
    },
    "/upload": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "predictor_tag"
        ],
        "summary": "Запрос на загрузку видоса",
        "operationId": "upload___post",
        "parameters": [
          {
            "description": "body",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "video_base64": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Возвращаемые ответы",
            "schema": {
              "type": "object",
              "properties": {
                "token": {
                  "type": "integer",
                  "format": "uint64"
                }
              }
            }
          },
          "500": {
            "description": "Ошибка сервера",
            "schema": {
              "$ref": "#/definitions/error_500"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "error_500": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string"
        }
      }
    },
    "info_200": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "uint64"
        },
        "out": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int"
          }
        },
        "persent": {
          "type": "number",
          "format": "float64"
        }
      }
    }
  },
  "tags": [
    {
      "description": "тег для запросов завязанных на предсказании",
      "name": "predictor_tag"
    }
  ]
}`))
}

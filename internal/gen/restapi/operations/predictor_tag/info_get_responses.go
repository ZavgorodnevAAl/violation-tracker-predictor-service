// Code generated by go-swagger; DO NOT EDIT.

package predictor_tag

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"service/internal/gen/models"
)

// InfoGetOKCode is the HTTP code returned for type InfoGetOK
const InfoGetOKCode int = 200

/*
InfoGetOK Возвращаемые ответы

swagger:response infoGetOK
*/
type InfoGetOK struct {

	/*
	  In: Body
	*/
	Payload *models.Info200 `json:"body,omitempty"`
}

// NewInfoGetOK creates InfoGetOK with default headers values
func NewInfoGetOK() *InfoGetOK {

	return &InfoGetOK{}
}

// WithPayload adds the payload to the info get o k response
func (o *InfoGetOK) WithPayload(payload *models.Info200) *InfoGetOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the info get o k response
func (o *InfoGetOK) SetPayload(payload *models.Info200) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *InfoGetOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// InfoGetInternalServerErrorCode is the HTTP code returned for type InfoGetInternalServerError
const InfoGetInternalServerErrorCode int = 500

/*
InfoGetInternalServerError Ошибка сервера

swagger:response infoGetInternalServerError
*/
type InfoGetInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error500 `json:"body,omitempty"`
}

// NewInfoGetInternalServerError creates InfoGetInternalServerError with default headers values
func NewInfoGetInternalServerError() *InfoGetInternalServerError {

	return &InfoGetInternalServerError{}
}

// WithPayload adds the payload to the info get internal server error response
func (o *InfoGetInternalServerError) WithPayload(payload *models.Error500) *InfoGetInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the info get internal server error response
func (o *InfoGetInternalServerError) SetPayload(payload *models.Error500) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *InfoGetInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
